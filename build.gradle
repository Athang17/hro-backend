plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id "org.sonarqube" version '6.0.1.5171'
}

group = 'com.eos.admin'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_18
    targetCompatibility = JavaVersion.VERSION_18
}

repositories {
	mavenCentral()
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
    // JWT Dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	// ZXing dependencies
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.4.1'
	// ModelMapper
    implementation 'org.modelmapper:modelmapper:3.1.1'
	
	//implementation 'com.itextpdf:itext7-core:7.2.4'
	implementation 'org.apache.pdfbox:pdfbox:2.0.27'
	implementation 'com.itextpdf:itext7-core:7.2.3'
	
	implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	testImplementation 'org.mockito:mockito-core'
	testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
	
	
	
	// Lombok dependency for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	
	// Tomcat (provided scope in Maven becomes 'providedRuntime' in Gradle)
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
	
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

springBoot {
    buildInfo()
}

tasks.named('test') {
	useJUnitPlatform()
}


sonarqube {
    properties {
        property "sonar.projectKey", "hro-admin-restfull-webservice"
        property "sonar.projectName", "hro-admin-restfull-webservice"
        property "sonar.host.url", "http://127.0.0.1:9000"
        property "sonar.token", "sqp_c9ef476937b12453248293f5bf050242e7d7d823"
        
         // Main source and binary directories
        property "sonar.sources", "src/main/java"
        property "sonar.java.binaries", "build/classes/java/main"
       
         // Test source and binary directories
        property "sonar.tests", "src/test/java"
        property "sonar.java.test.binaries", "build/classes/java/test"
    }
}